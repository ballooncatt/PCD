dict_keys(['args', 'cfg', 'model', 'criterion', 'optimizer_history', 'task_state', 'extra_state', 'last_optimizer_state'])
{'_name': None, 'common': 
{'_name': None, 'no_progress_bar': False, 'log_interval': 200, 'log_format': 'json', 'log_file': None, 'tensorboard_logdir': 'tblog', 'wandb_project': None, 
'azureml_logging': False, 'seed': 1337, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': True, 'memory_efficient_fp16': False, 
'fp16_no_flatten_grads': False, 'fp16_init_scale': 128, 'fp16_scale_window': None, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 
'threshold_loss_scale': None, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 
'user_dir': '/home/fudongjie/mymy/av_hubert_1/avhubert', 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 
'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 

'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 
'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 
'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 
'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 
'slowmo_momentum': None, 'slowmo_algorithm': 'LocalSGD', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 
'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 
'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': True, 'memory_efficient_fp16': False, 'tpu': False, 
'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False}, 
'dataset': {'_name': None, 'num_workers': 6, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 1000, 'batch_size': None, 'required_batch_size_multiple': 8, 
'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train', 'valid_subset': 'valid', 'combine_valid_subsets': None, 
'ignore_unused_valid_subsets': False, 'validate_interval': 2, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 
'disable_validation': False, 'max_tokens_valid': 1000, 'batch_size_valid': None, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 
'shard_id': 0}, 'optimization': {'_name': None, 'max_epoch': 0, 'max_update': 80000, 'stop_time_hours': 0.0, 'clip_norm': 10.0, 'sentence_avg': True, 'update_freq': [1], 
'lr': [0.001], 'stop_min_lr': -1.0, 'use_bmuf': False}, 'checkpoint': {'_name': None, 'save_dir': 'checkpoints', 'restore_file': 'checkpoint_last.pt', 
'finetune_from_model': None, 'reset_dataloader': True, 'reset_lr_scheduler': False, 'reset_meters': False, 'reset_optimizer': True, 'optimizer_overrides': '{}',
 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': 1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': -1, 'keep_best_checkpoints': -1, 
 'no_save': False, 'no_epoch_checkpoints': True, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 
 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 
 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1}, 
 
 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 1}, 
 
 'generation': {'_name': None, 'beam': 5, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 
 'no_beamable_mm': False, 'lenpen': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 
 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 
 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 
 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 
 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 
 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 
 'model': {'_name': 'av_hubert_seq2seq', 'w2v_path': '/home/fudongjie/base_vox_iter5.pt', 'apply_mask': False, 'mask_selection': 'static', 'mask_length': 10, 
 'mask_other': 0, 'mask_prob': 0.75, 'mask_channel_selection': 'static', 'mask_channel_length': 64, 'mask_channel_other': 0, 'mask_channel_prob': 0.5, 'layerdrop': 0.1, 
 'dropout': 0.0, 'activation_dropout': 0.1, 'attention_dropout': 0.0, 'feature_grad_mult': 1.0, 'decoder_layers': 6, 'decoder_dropout': 0.1, 'decoder_attention_dropout': 0.0, 
 'decoder_activation_dropout': 0.1, 'freeze_finetune_updates': -1, 'share_decoder_input_output_embed': True, 'decoder_normalize_before': True, 'prompting': True, 'prompt_strategy': 'base_10'}, 'task': {'_name': 'av_hubert_pretraining', 'is_s2s': True, 'data': '/home/fudongjie/data/lrs2/433h_data', 'label_dir': '/home/fudongjie/data/lrs2/433h_data', 'tokenizer_bpe_model': '/home/fudongjie/OpenSR/model/spm_unigram1000.model', 'normalize': True, 'labels': ['wrd'], 'single_target': True, 'fine_tuning': True, 'stack_order_audio': 4, 'tokenizer_bpe_name': 'sentencepiece', 'max_sample_size': 500, 'modalities': ['video', 'audio'], 'image_aug': True, 'pad_audio': True, 'random_crop': False, 'noise_prob': 0.3, 'noise_snr': 0, 'noise_wav': '/home/fudongjie/musan/musan/tsv/noise'}, 'criterion': {'_name': 'label_smoothed_cross_entropy', 'label_smoothing': 0.1, 'report_accuracy': True, 'ignore_prefix_size': 0, 'sentence_avg': True}, 'optimizer': {'_name': 'adam', 'adam_betas': '(0.9,0.98)', 'adam_eps': 1e-08, 'weight_decay': 0.0, 'use_old_adam': False, 'tpu': False, 'lr': [0.001]}, 'lr_scheduler': {'_name': 'tri_stage', 'warmup_steps': 15000, 'hold_steps': 0, 'decay_steps': 20000, 'phase_ratio': None, 'init_lr_scale': 0.01, 'final_lr_scale': 0.05, 'max_update': 80000, 'lr': [0.001]}, 'scoring': None, 'bpe': None, 'tokenizer': None, 'job_logging_cfg': {'version': 1, 'formatters': {'simple': {'format': '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'}}, 'handlers': {'console': {'class': 'logging.StreamHandler', 'formatter': 'simple', 'stream': 'ext://sys.stdout'}, 'file': {'class': 'logging.FileHandler', 'formatter': 'simple', 'filename': 'hydra_train.log'}}, 'root': {'level': 'INFO', 'handlers': ['console', 'file']}, 'disable_existing_loggers': False}}



{'dictionaries': [<fairseq.data.dictionary.Dictionary object at 0x7fc15ce0d4c0>], 'target_dictionary': <fairseq.data.dictionary.Dictionary object at 0x7fc15ce0d4f0>, 's2s_tokenizer': <fairseq.data.encoders.sentencepiece_bpe.SentencepieceBPE object at 0x7fc15ce0d550>}
{'metrics': {'default': [(10, 'loss', 'AverageMeter', {'val': tensor(55.8533, dtype=torch.float64), 'sum': tensor(1.7639e+08, dtype=torch.float64), 'count': tensor(3082785., dtype=torch.float64), 'round': 3}), (10, 'nll_loss', 'AverageMeter', {'val': tensor(0.4495, dtype=torch.float64), 'sum': tensor(86633759.9953, dtype=torch.float64), 'count': tensor(72619522., dtype=torch.float64), 'round': 3}), (10, 'total', 'AverageMeter', {'val': 1269.0, 'sum': 72619522.0, 'count': 60000, 'round': None}), (10, 'n_correct', 'AverageMeter', {'val': 1209.0, 'sum': 61150162.0, 'count': 60000, 'round': None}), (90, 'wps', 'TimeMeter', {'init': 32516.15725433943, 'n': tensor(72618382., dtype=torch.float64), 'round': 1}), (100, 'ups', 'TimeMeter', {'init': 32516.158368818695, 'n': 59999.0, 'round': 2}), (180, 'wpb', 'AverageMeter', {'val': tensor(1269., dtype=torch.float64), 'sum': tensor(72619522., dtype=torch.float64), 'count': 60000, 'round': 1}), (190, 'bsz', 'AverageMeter', {'val': tensor(40., dtype=torch.float64), 'sum': tensor(3082785., dtype=torch.float64), 'count': 60000, 'round': 1}), (200, 'num_updates', 'AverageMeter', {'val': 60000, 'sum': 0, 'count': 0, 'round': None}), (300, 'lr', 'AverageMeter', {'val': 5.000000000000001e-05, 'sum': 0, 'count': 0, 'round': None}), (400, 'gnorm', 'AverageMeter', {'val': tensor(40.6853, dtype=torch.float64), 'sum': tensor(1448946.4058, dtype=torch.float64), 'count': 60000, 'round': 3}), (700, 'loss_scale', 'AverageMeter', {'val': 64.0, 'sum': 0, 'count': 0, 'round': 4}), (790, 'wall', 'StopwatchMeter', {'sum': 0, 'n': 0, 'round': 0}), (800, 'train_wall', 'StopwatchMeter', {'sum': 20554.956803454086, 'n': 0.0, 'round': 0}), (1500, 'gb_free', 'AverageMeter', {'val': 26.12764263153076, 'sum': 0, 'count': 0, 'round': 1})], 'train': [(10, 'loss', 'AverageMeter', {'val': tensor(247.9439), 'sum': tensor(4935455.), 'count': 45840, 'round': 3}), (10, 'nll_loss', 'AverageMeter', {'val': tensor(8.1958), 'sum': tensor(4765145.), 'count': 591660, 'round': 3}), (10, 'total', 'AverageMeter', {'val': 205, 'sum': 591660, 'count': 3213, 'round': None}), (10, 'n_correct', 'AverageMeter', {'val': 19, 'sum': 71402, 'count': 3213, 'round': None}), (90, 'wps', 'TimeMeter', {'init': 717.7978406629991, 'n': 591660, 'round': 1}), (100, 'ups', 'TimeMeter', {'init': 717.7978422329761, 'n': 3213.0, 'round': 2}), (180, 'wpb', 'AverageMeter', {'val': 205, 'sum': 591660, 'count': 3213, 'round': 1}), (190, 'bsz', 'AverageMeter', {'val': 7, 'sum': 45840, 'count': 3213, 'round': 1}), (200, 'num_updates', 'AverageMeter', {'val': 51408, 'sum': 0, 'count': 0, 'round': None}), (300, 'lr', 'AverageMeter', {'val': 5e-05, 'sum': 0, 'count': 0, 'round': None}), (400, 'gnorm', 'AverageMeter', {'val': tensor(4.6042), 'sum': tensor(11439.8633), 'count': 3213, 'round': 3}), (500, 'clip', 'AverageMeter', {'val': tensor(0.), 'sum': tensor(3100.), 'count': 3213, 'round': 1}), (700, 'loss_scale', 'AverageMeter', {'val': 1024.0, 'sum': 0, 'count': 0, 'round': 4}), (800, 'train_wall', 'StopwatchMeter', {'sum': 425.5744724611286, 'n': 0.0, 'round': 0}), (1500, 'gb_free', 'AverageMeter', {'val': 8.943495750427246, 'sum': 0, 'count': 0, 'round': 1})], 'train_inner': [(10, 'loss', 'AverageMeter', {'val': tensor(247.9439), 'sum': tensor(12268.0332), 'count': 84, 'round': 3}), (10, 'nll_loss', 'AverageMeter', {'val': tensor(8.1958), 'sum': tensor(11883.9512), 'count': 1445, 'round': 3}), (10, 'total', 'AverageMeter', {'val': 205, 'sum': 1445, 'count': 8, 'round': None}), (10, 'n_correct', 'AverageMeter', {'val': 19, 'sum': 144, 'count': 8, 'round': None}), (90, 'wps', 'TimeMeter', {'init': 15.544422787846997, 'n': 1445, 'round': 1}), (100, 'ups', 'TimeMeter', {'init': 15.54442713712342, 'n': 8.0, 'round': 2}), (180, 'wpb', 'AverageMeter', {'val': 205, 'sum': 1445, 'count': 8, 'round': 1}), (190, 'bsz', 'AverageMeter', {'val': 7, 'sum': 84, 'count': 8, 'round': 1}), (200, 'num_updates', 'AverageMeter', {'val': 51408, 'sum': 0, 'count': 0, 'round': None}), (300, 'lr', 'AverageMeter', {'val': 5e-05, 'sum': 0, 'count': 0, 'round': None}), (400, 'gnorm', 'AverageMeter', {'val': tensor(4.6042), 'sum': tensor(30.2693), 'count': 8, 'round': 3}), (500, 'clip', 'AverageMeter', {'val': tensor(0.), 'sum': tensor(0.), 'count': 8, 'round': 1}), (700, 'loss_scale', 'AverageMeter', {'val': 1024.0, 'sum': 0, 'count': 0, 'round': 4}), (800, 'train_wall', 'StopwatchMeter', {'sum': 0.9962432701140642, 'n': 0.0, 'round': 0}), (1500, 'gb_free', 'AverageMeter', {'val': 8.943495750427246, 'sum': 0, 'count': 0, 'round': 1})], 'valid': [(10, 'loss', 'AverageMeter', {'val': tensor(41.0385), 'sum': tensor(1056508.7500), 'count': tensor(12256., dtype=torch.float64), 'round': 3}), (10, 'nll_loss', 'AverageMeter', {'val': tensor(7.0574), 'sum': tensor(934075.), 'count': tensor(179453., dtype=torch.float64), 'round': 3}), (10, 'total', 'AverageMeter', {'val': 33, 'sum': 179453.0, 'count': 672, 'round': None}), (10, 'n_correct', 'AverageMeter', {'val': 8, 'sum': 77231.0, 'count': 672, 'round': None}), (90, 'wps', 'TimeMeter', {'init': 22434.205942799803, 'n': tensor(177902., dtype=torch.float64), 'round': 1}), (180, 'wpb', 'AverageMeter', {'val': 33, 'sum': tensor(179453., dtype=torch.float64), 'count': 672, 'round': 1}), (190, 'bsz', 'AverageMeter', {'val': 6, 'sum': tensor(12256., dtype=torch.float64), 'count': 672, 'round': 1})]}, 'previous_training_time': tensor(32523.1744, dtype=torch.float64), 'train_iterator': {'version': 2, 'epoch': 17, 'iterations_in_epoch': 0, 'shuffle': True}, 'val_loss': 12.359, 'best': 12.359}
